steps:

# Build and tag pygdal image
- name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/pygdal:$SHORT_SHA'
  - '-t'
  - 'gcr.io/$PROJECT_ID/pygdal:latest'
  - '-f'
  - './python-gdal/Dockerfile'
  - './python-gdal'
# Push the pygdal image to the Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'push'
  - 'gcr.io/$PROJECT_ID/pygdal:$SHORT_SHA'
- name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'push'
  - 'gcr.io/$PROJECT_ID/pygdal:latest'

# Build, tag and push snowcover image to Container Registry
# Uses Kaniko for caching layers (6h ttl) 
#Â Warning this may prevent picking changes to requirements.txt
- name: 'gcr.io/kaniko-project/executor:latest'
  args: 
  - --destination=gcr.io/$PROJECT_ID/ohdataweb:$SHORT_SHA
  - --cache=true
  - --cache-ttl=6h

timeout: 1500s